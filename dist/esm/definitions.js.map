{"version":3,"file":"definitions.js","sourceRoot":"","sources":["../../src/definitions.ts"],"names":[],"mappings":"","sourcesContent":["import { PluginListenerHandle } from \"@capacitor/core\";\n\nexport interface IntunePlugin {\n  loginAndEnrollAccount(options: { email: string }): Promise<void>;\n  registerAndEnrollAccount(options: { email: string }): Promise<void>;\n  deRegisterAndUnenrollAccount(options: { email: string, withWipe: boolean }): Promise<void>;\n  deRegisterAndUnenrollAccountId(options: { accountId: string, withWipe: boolean }): Promise<void>;\n  openIntuneConsole(): Promise<void>;\n  getEnrolledAccount(): Promise<{ account?: string }>;\n  getEnrolledAccountId(): Promise<{ accountId?: string }>;\n  getEnrolledAccountIds(): Promise<{ accountIds: string[] }>;\n  isSupportedPlatform(): Promise<{ supported: boolean }>;\n\n  addListener(eventName: \"enrollmentResult\", listenerFunc: (status: { statusCode: number; didSucceed: boolean; description: string }) => void): Promise<PluginListenerHandle> & PluginListenerHandle;\n}\n"]}