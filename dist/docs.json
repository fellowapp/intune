{
  "api": {
    "name": "IntunePlugin",
    "slug": "intuneplugin",
    "docs": "",
    "tags": [],
    "methods": [
      {
        "name": "loginAndEnrollAccount",
        "signature": "(options: { email: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ email: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "loginandenrollaccount"
      },
      {
        "name": "registerAndEnrollAccount",
        "signature": "(options: { email: string; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ email: string; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "registerandenrollaccount"
      },
      {
        "name": "deRegisterAndUnenrollAccount",
        "signature": "(options: { email: string; withWipe: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ email: string; withWipe: boolean; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deregisterandunenrollaccount"
      },
      {
        "name": "deRegisterAndUnenrollAccountId",
        "signature": "(options: { accountId: string; withWipe: boolean; }) => Promise<void>",
        "parameters": [
          {
            "name": "options",
            "docs": "",
            "type": "{ accountId: string; withWipe: boolean; }"
          }
        ],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "deregisterandunenrollaccountid"
      },
      {
        "name": "openIntuneConsole",
        "signature": "() => Promise<void>",
        "parameters": [],
        "returns": "Promise<void>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "openintuneconsole"
      },
      {
        "name": "getEnrolledAccount",
        "signature": "() => Promise<{ account?: string; }>",
        "parameters": [],
        "returns": "Promise<{ account?: string | undefined; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getenrolledaccount"
      },
      {
        "name": "getEnrolledAccountId",
        "signature": "() => Promise<{ accountId?: string; }>",
        "parameters": [],
        "returns": "Promise<{ accountId?: string | undefined; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getenrolledaccountid"
      },
      {
        "name": "getEnrolledAccountIds",
        "signature": "() => Promise<{ accountIds: string[]; }>",
        "parameters": [],
        "returns": "Promise<{ accountIds: string[]; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "getenrolledaccountids"
      },
      {
        "name": "isSupportedPlatform",
        "signature": "() => Promise<{ supported: boolean; }>",
        "parameters": [],
        "returns": "Promise<{ supported: boolean; }>",
        "tags": [],
        "docs": "",
        "complexTypes": [],
        "slug": "issupportedplatform"
      },
      {
        "name": "addListener",
        "signature": "(eventName: \"enrollmentResult\", listenerFunc: (status: { identity: string; statusCode: number; didSucceed: boolean; errorString: string; }) => void) => Promise<PluginListenerHandle> & PluginListenerHandle",
        "parameters": [
          {
            "name": "eventName",
            "docs": "",
            "type": "'enrollmentResult'"
          },
          {
            "name": "listenerFunc",
            "docs": "",
            "type": "(status: { identity: string; statusCode: number; didSucceed: boolean; errorString: string; }) => void"
          }
        ],
        "returns": "Promise<PluginListenerHandle> & PluginListenerHandle",
        "tags": [],
        "docs": "",
        "complexTypes": [
          "PluginListenerHandle"
        ],
        "slug": "addlistenerenrollmentresult"
      }
    ],
    "properties": []
  },
  "interfaces": [
    {
      "name": "PluginListenerHandle",
      "slug": "pluginlistenerhandle",
      "docs": "",
      "tags": [],
      "methods": [],
      "properties": [
        {
          "name": "remove",
          "tags": [],
          "docs": "",
          "complexTypes": [],
          "type": "() => Promise<void>"
        }
      ]
    }
  ],
  "enums": [],
  "typeAliases": [],
  "pluginConfigs": []
}